-- 启用PostGIS和UUID扩展
CREATE EXTENSION IF NOT EXISTS postgis;
CREATE EXTENSION IF NOT EXISTS "uuid-ossp";

-- 创建airspaces表（严格遵循3D空间数据存储需求）
CREATE TABLE airspaces (
    id UUID PRIMARY KEY DEFAULT uuid_generate_v4(),  -- UUID主键
    name VARCHAR NOT NULL,                          -- 空域名称
    bounds GEOMETRY(POLYHEDRALSURFACEZ, 4326),     -- 3D多面体表面几何
    current_time TIMESTAMP NOT NULL,                -- 当前时间戳
    time_step FLOAT NOT NULL,                       -- 时间步长（秒）
    environment_parameters JSONB,                   -- 环境参数JSON

    -- 以下为系统标准字段
    created_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
    is_deleted BOOLEAN NOT NULL DEFAULT FALSE
);

-- 创建主键索引（符合pk_{表名}规范）
COMMENT ON CONSTRAINT pk_airspaces ON airspaces IS '主键索引';

-- 创建空间索引（优化3D空间查询）
CREATE INDEX idx_airspaces_bounds ON airspaces USING GIST (bounds);
COMMENT ON INDEX idx_airspaces_bounds IS '空域边界空间索引';

-- 创建更新时间自动更新触发器
CREATE OR REPLACE FUNCTION update_modified_column()
RETURNS TRIGGER AS $$
BEGIN
    NEW.updated_at = CURRENT_TIMESTAMP;
    RETURN NEW;
END;
$$ LANGUAGE plpgsql;

CREATE TRIGGER update_airspaces_modtime
BEFORE UPDATE ON airspaces
FOR EACH ROW
EXECUTE FUNCTION update_modified_column();


-- 创建entities表（通用实体表）
CREATE TABLE entities (
    id UUID PRIMARY KEY DEFAULT uuid_generate_v4(),  -- UUID主键
    airspace_id UUID NOT NULL,                      -- 关联airspaces表
    type VARCHAR NOT NULL,                          -- 实体类型
    name VARCHAR NOT NULL,                          -- 实体名称
    position GEOMETRY(PointZ, 4326) NOT NULL,       -- 三维坐标点
    orientation JSONB NOT NULL,                     -- 方向数据
    status VARCHAR NOT NULL,                        -- 状态
    health FLOAT NOT NULL DEFAULT 1.0,              -- 健康度(0.0-1.0)
    specific_attributes JSONB,                      -- 特有属性

    -- 系统标准字段
    created_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
    is_deleted BOOLEAN NOT NULL DEFAULT FALSE,

    -- 外键约束（不创建外键索引，符合规范）
    CONSTRAINT fk_entities_airspace FOREIGN KEY (airspace_id)
        REFERENCES airspaces(id) ON DELETE RESTRICT
);

-- 主键索引（符合pk_{表名}规范）
COMMENT ON CONSTRAINT pk_entities ON entities IS '主键索引';

-- 创建空间索引（优化3D位置查询）
CREATE INDEX idx_entities_position ON entities USING GIST (position);
COMMENT ON INDEX idx_entities_position IS '实体位置空间索引';

-- 创建类型索引（常用查询字段）
CREATE INDEX idx_entities_type ON entities (type);
COMMENT ON INDEX idx_entities_type IS '实体类型索引';

-- 创建更新时间触发器（与airspaces表保持一致）
CREATE TRIGGER update_entities_modtime
BEFORE UPDATE ON entities
FOR EACH ROW
EXECUTE FUNCTION update_modified_column();  -- 复用之前创建的触发器函数



-- 创建detection_events表（探测事件表）
CREATE TABLE detection_events (
    id UUID PRIMARY KEY DEFAULT uuid_generate_v4(),  -- 事件ID
    timestamp TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,  -- 探测时间
    detector_id UUID NOT NULL,                      -- 探测器实体ID
    detected_uav_id UUID NOT NULL,                  -- 被探测无人机ID
    detected_position GEOMETRY(PointZ, 4326) NOT NULL,  -- 探测位置
    confidence FLOAT NOT NULL,                      -- 置信度(0.0-1.0)
    sensor_type VARCHAR NOT NULL,                   -- 传感器类型
    details JSONB,                                  -- 探测细节

    -- 系统标准字段
    created_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
    is_deleted BOOLEAN NOT NULL DEFAULT FALSE,

    -- 外键约束（不创建外键索引，符合规范）
    CONSTRAINT fk_detection_detector FOREIGN KEY (detector_id)
        REFERENCES entities(id) ON DELETE RESTRICT,
    CONSTRAINT fk_detection_uav FOREIGN KEY (detected_uav_id)
        REFERENCES entities(id) ON DELETE RESTRICT
);

-- 主键索引（符合pk_{表名}规范）
COMMENT ON CONSTRAINT pk_detection_events ON detection_events IS '主键索引';

-- 创建空间索引（优化位置查询）
CREATE INDEX idx_detection_events_position ON detection_events USING GIST (detected_position);
COMMENT ON INDEX idx_detection_events_position IS '探测位置空间索引';

-- 创建时间索引（优化时间范围查询）
CREATE INDEX idx_detection_events_timestamp ON detection_events (timestamp);
COMMENT ON INDEX idx_detection_events_timestamp IS '探测时间索引';

-- 创建探测器ID索引（优化关联查询）
CREATE INDEX idx_detection_events_detector ON detection_events (detector_id);
COMMENT ON INDEX idx_detection_events_detector IS '探测器ID索引';

-- 创建被探测无人机ID索引（优化关联查询）
CREATE INDEX idx_detection_events_uav ON detection_events (detected_uav_id);
COMMENT ON INDEX idx_detection_events_uav IS '被探测无人机ID索引';

-- 创建更新时间触发器（保持一致性）
CREATE TRIGGER update_detection_events_modtime
BEFORE UPDATE ON detection_events
FOR EACH ROW
EXECUTE FUNCTION update_modified_column();  -- 复用已有触发器函数

